{"mappings":"YAeA,SAASA,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACaC,KAAKC,SAAW,GAEpCJ,EAAQ,CAAEH,WAAUC,UAEpBG,EAAQ,CAAEJ,WAAUC,S,GAErBA,E,IAxBMO,SAASC,cAAc,SAC/BC,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAIC,iBACJ,IAAK,IAAIC,EAAI,EAAGA,GAAKC,OAAQD,GAAK,EAChCd,EAAcc,EAAGZ,OAChBc,MAAK,SAAAC,G,IAAGhB,EAAQgB,EAARhB,SAAUiB,EAAKD,EAALf,MACjBiB,QAAQC,IAAI,uBAAwCC,OAAfpB,EAAS,QAAYoB,OAANH,EAAM,M,IAE1DI,OAAM,SAAAL,G,IAAGhB,EAAQgB,EAARhB,SAAUiB,EAAKD,EAALf,MACnBiB,QAAQC,IAAI,sBAAqCC,OAAfpB,EAAS,QAAYoB,OAANH,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["const form = document.querySelector('.form');\nform.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(evt) {\n  evt.preventDefault();\n  for (let i = 1; i <= amount; i += 1) {\n    createPromise(i, delay)\n    .then(({ position, delay }) => {\n      console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n     })\n     .catch(({ position, delay }) => {\n      console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n  }\n}; \nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay })\n      } else {\n        reject ({ position, delay })\n      };\n    }, delay);\n  }); \n}\n\n"],"names":["$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","document","querySelector","addEventListener","evt","preventDefault","i","amount","then","param","_$delay","console","log","concat","catch"],"version":3,"file":"03-promises.f6d7e3d2.js.map"}